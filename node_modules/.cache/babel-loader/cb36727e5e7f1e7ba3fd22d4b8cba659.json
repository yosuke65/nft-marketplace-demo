{"ast":null,"code":"import _toConsumableArray from \"/Users/hawk2/Desktop/Web Projects/web3/nft-marketplace-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/hawk2/Desktop/Web Projects/web3/nft-marketplace-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/hawk2/Desktop/Web Projects/web3/nft-marketplace-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/hawk2/Desktop/Web Projects/web3/nft-marketplace-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/hawk2/Desktop/Web Projects/web3/nft-marketplace-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hawk2/Desktop/Web Projects/web3/nft-marketplace-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/hawk2/Desktop/Web Projects/web3/nft-marketplace-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/hawk2/Desktop/Web Projects/web3/nft-marketplace-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hawk2/Desktop/Web Projects/web3/nft-marketplace-demo/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { Nav } from \"react-bootstrap\";\nimport KryptoBird from \"../abis/KryptoBird.json\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var provider;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return detectEthereumProvider();\n\n              case 2:\n                provider = _context2.sent;\n\n                if (provider) {\n                  console.log(\"ethereum wallet is connected\");\n                  window.Web3 = new Web3(provider);\n                } else {\n                  console.log(\"no ethereum wallet detected\");\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var accounts, networkId, networkData, abi, address, contract, totalSupply, i, _KryptoBird;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return window.Web3.eth.requestAccounts();\n\n              case 2:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 6;\n                return window.ethereum.request({\n                  method: \"net_version\"\n                });\n\n              case 6:\n                networkId = _context3.sent;\n                networkData = KryptoBird.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                abi = KryptoBird.abi;\n                console.log();\n                address = networkData.address;\n                contract = new Web3().eth.Contract(abi, address);\n                this.setState({\n                  contract: contract\n                });\n                _context3.next = 16;\n                return contract.methods.totalSupply();\n\n              case 16:\n                totalSupply = _context3.sent;\n                this.setState({\n                  totalSupply: totalSupply\n                });\n                console.log(this.state.totalSupply);\n                i = 1;\n\n              case 20:\n                if (!(i <= totalSupply)) {\n                  _context3.next = 28;\n                  break;\n                }\n\n                _context3.next = 23;\n                return contract.methods.kryptoBirdz(i - 1).call();\n\n              case 23:\n                _KryptoBird = _context3.sent;\n                this.setState({\n                  kryptoBirdz: [].concat(_toConsumableArray(this.state.kryptoBirdz), [_KryptoBird])\n                });\n\n              case 25:\n                i++;\n                _context3.next = 20;\n                break;\n\n              case 28:\n                console.log(this.state.kryptoBirdz);\n                _context3.next = 32;\n                break;\n\n              case 31:\n                window.alert(\"Smart Contract not deployed\");\n\n              case 32:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.mint = function (kryptoBird) {\n      console.log(kryptoBird);\n      console.log(_this.state.contract.methods.mint(kryptoBird));\n      console.log(_this.state.account);\n\n      _this.state.contract.methods.mint(kryptoBird).send({\n        from: _this.state.account\n      }).once(\"receipt\", function (receipt) {\n        _this.setState({\n          kryptoBirdz: [].concat(_toConsumableArray(_this.state.kryptoBirdz), [KryptoBird])\n        });\n      });\n    };\n\n    _this.state = {\n      account: \"\",\n      contract: null,\n      totalSupply: 0,\n      kryptoBirdz: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-brand col-sm-3 col-md-3 mr-0\",\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Krypto Birdz NFTs (Non Fungible Tokens)\"), React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.state.account)))), React.createElement(\"div\", {\n        className: \"container-fluid mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        style: {\n          opacity: \"0.8\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"KryptoBirdz - NFT Marketplace\"), React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          var kryptoBird = _this2.kryptoBird.value;\n\n          _this2.mint(kryptoBird);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a file location\",\n        className: \"form-control mb-1\",\n        ref: function ref(input) {\n          return _this2.kryptoBird = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-black\",\n        value: \"MINT\",\n        style: {\n          margin: \"6px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/hawk2/Desktop/Web Projects/web3/nft-marketplace-demo/src/components/App.js"],"names":["React","Component","Web3","detectEthereumProvider","Nav","KryptoBird","App","loadWeb3","loadBlockchainData","provider","console","log","window","eth","requestAccounts","accounts","setState","account","ethereum","request","method","networkId","networkData","networks","abi","address","contract","Contract","methods","totalSupply","state","i","kryptoBirdz","call","alert","props","mint","kryptoBird","send","from","once","receipt","color","opacity","event","preventDefault","value","input","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport { Nav } from \"react-bootstrap\";\nimport KryptoBird from \"../abis/KryptoBird.json\";\n\nclass App extends Component {\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    const provider = await detectEthereumProvider();\n\n    if (provider) {\n      console.log(\"ethereum wallet is connected\");\n      window.Web3 = new Web3(provider);\n    } else {\n      console.log(\"no ethereum wallet detected\");\n    }\n  }\n\n  async loadBlockchainData() {\n    const accounts = await window.Web3.eth.requestAccounts();\n    this.setState({\n      account: accounts[0],\n    });\n\n    const networkId = await window.ethereum.request({ method: \"net_version\" });\n    const networkData = KryptoBird.networks[networkId];\n\n    if (networkData) {\n      const abi = KryptoBird.abi;\n      console.log();\n      const address = networkData.address;\n      const contract = new Web3().eth.Contract(abi, address);\n      this.setState({ contract });\n      const totalSupply = await contract.methods.totalSupply();\n      this.setState({ totalSupply });\n      console.log(this.state.totalSupply);\n\n      for (let i = 1; i <= totalSupply; i++) {\n        const KryptoBird = await contract.methods.kryptoBirdz(i - 1).call();\n        this.setState({ kryptoBirdz: [...this.state.kryptoBirdz, KryptoBird] });\n      }\n      console.log(this.state.kryptoBirdz);\n    } else {\n      window.alert(\"Smart Contract not deployed\");\n    }\n  }\n\n  mint = (kryptoBird) => {\n    console.log(kryptoBird);\n    console.log(this.state.contract.methods.mint(kryptoBird));\n    console.log(this.state.account);\n    this.state.contract.methods\n      .mint(kryptoBird)\n      .send({ from: this.state.account })\n      .once(\"receipt\", (receipt) => {\n        this.setState({ kryptoBirdz: [...this.state.kryptoBirdz, KryptoBird] });\n      });\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      contract: null,\n      totalSupply: 0,\n      kryptoBirdz: [],\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <Nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <div\n            className=\"navbar-brand col-sm-3 col-md-3 mr-0\"\n            style={{ color: \"white\" }}\n          >\n            Krypto Birdz NFTs (Non Fungible Tokens)\n          </div>\n          <ul className=\"navbar-nav px-3\">\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n              <small className=\"text-white\">{this.state.account}</small>\n            </li>\n          </ul>\n        </Nav>\n        <div className=\"container-fluid mt-1\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div\n                className=\"content mr-auto ml-auto\"\n                style={{ opacity: \"0.8\" }}\n              >\n                <h1 style={{ color: \"white\" }}>\n                  KryptoBirdz - NFT Marketplace\n                </h1>\n                <form\n                  onSubmit={(event) => {\n                    event.preventDefault();\n                    const kryptoBird = this.kryptoBird.value;\n                    this.mint(kryptoBird);\n                  }}\n                >\n                  <input\n                    type=\"text\"\n                    placeholder=\"Add a file location\"\n                    className=\"form-control mb-1\"\n                    ref={(input) => (this.kryptoBird = input)}\n                  />\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-black\"\n                    value=\"MINT\"\n                    style={{ margin: \"6px\" }}\n                  />\n                </form>\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}